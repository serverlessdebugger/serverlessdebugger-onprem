# --------------------------------------------------------------------------------
#
# This is a sample .env file. Environment variables below is needed to run the
# stack. The stack will expect a `.env` file in this directory. So, make sure to
# run the script below or copy this file as `.env` and fill the variables.
#
#   # To copy this file as `.env`
#   cp sample.env .env
#
# OS Environment variables WILL NOT be overridden.
# See `bin/app.ts` to have more load options and customize it to your needs.
#
# Some of the variables are optional and some are necessary. Each of them should
# have a description why it is needed etc.
#
# If you have any question, please contact Thundra.

# --------------------------------------------------------------------------------
# STAGE
# --------------------------------------------------------------------------------
#
# [OPTIONAL] STAGE
#
# This value will be used to add suffix to your CloudFormation resources. If you
# encounter any issues with the CloudFormation's resource name limitations, you
# can change the value directy in `utils/helpers.ts`.
#
# Default value is dev.
STAGE=dev

# --------------------------------------------------------------------------------
# ENTITY_PREFIX
# --------------------------------------------------------------------------------
#
# [OPTIONAL] ENTITY_PREFIX
#
# This value will be used to add prefix to your CloudFormation resources. If you
# encounter any issues with the CloudFormation's resource name limitations, you
# can change the value directy in `utils/helpers.ts`.
#
# Default value is slsd.
ENTITY_PREFIX=slsd

# --------------------------------------------------------------------------------
# NETWORK AND SECURITY
# --------------------------------------------------------------------------------
#
# [OPTIONAL] USE_HTTPS
# Set this variable to true if you want to use HTTPS. If it's set to true,
# it'll expect a certificate arn. See variable $SSL_CERTIFICATE_ARN.
#
# Default value is false. True values are 'y', 'yes', 't', 'true', 'on', and '1';
# False values are 'n', 'no', 'f', 'false', 'off', and '0'. Raises ValueError
# if 'val' is anything else.
USE_HTTPS=false

# [OPTIONAL][DEPENDS $USE_HTTPS] SSL_CERTIFICATE_ARN
# Set this variable to your certificate arn. We don't create a new certificate
# in this stack as you could be handling and importing your SSL certs from
# somewhere else.
#
# Uncomment the following line if $USE_HTTPS is set true.
# SSL_CERTIFICATE_ARN='arn:aws:acm:<REGION>:<AWS_ACCOUNT_ID>:certificate/<CERTIFICATE_HASH>'

# [OPTIONAL] VPC_ID
# Set this variable to the VPC ID in which you want to install the resources in
# this stack. We'll select the default VPC if you don't set this variable.
#
# Uncomment the following line if you want to use a specific VPC.
# VPC_ID='vpc-12345678'

# [REQUIRED] SUBNET_IDS
# Unlike VPC, subnets is required since we can't assume what kind of subnet our
# clients want to use. This will take a list of subnet ids separated with a comma.
#
# Please, uncomment the following line and set your subnet ids.
# SUBNET_IDS='subnet-12345678,subnet-23456789,subnet-34567890'

# --------------------------------------------------------------------------------
# THUNDRA LICENSING
# --------------------------------------------------------------------------------
#
# [REQUIRED] THUNDRA_LICENSE_KEY
# Set this to the Thundra License Key. This is a specific key and it's different
# from the Thundra's APM API Keys or Debugger Tokens.
#
# If you don't know what to set, lost your key, or have any problem with your key
# please contact Thundra.
#
# Please, uncomment the following line and set your license key.
# THUNDRA_LICENSE_KEY='<THUNDRA_LICENSE_KEY>'

# --------------------------------------------------------------------------------
# DNS MAPPING
# --------------------------------------------------------------------------------
#
# [OPTIONAL] CREATE_DNS_MAPPING
# Set this variable to true if you want to use a specific domain name to access
# the deployed Thundra lambda broker. If this is set to true, we'll expect you
# to fill $HOSTED_ZONE_NAME, $BROKER_PUBLIC_SUBDOMAIN, $BROKER_PRIVATE_SUBDOMAIN
# as well.
#
# Default value is false.
CREATE_DNS_MAPPING=false

# [OPTIONAL][DEPENDS $CREATE_DNS_MAPPING] HOSTED_ZONE_NAME
# This is your hosted zone name. If $CREATE_DNS_MAPPING is false, then we don't
# check this variable. Otherwise, it's required.
#
# Please, uncomment the following line if you decided to create a DNS mapping.
# HOSTED_ZONE_NAME='example.com'

# [OPTIONAL][DEPENDS $CREATE_DNS_MAPPING] BROKER_PUBLIC_SUBDOMAIN
# This is your public subdomain. It'll be set to access the public load balancer.
# Depends on $CREATE_DNS_MAPPING and $HOSTED_ZONE_NAME. You don't need to set
# this to a full domain, it'll only expect the subdomain part. We'll construct
# the whole domain using the $HOSTED_ZONE_NAME in the application.
#
# e.g. BROKER_PUBLIC_SUBDOMAIN='public' and HOSTED_ZONE_NAME='example.com'
# will end up with `public.example.com` to target the public load balancer.
#
# Please, uncomment the following line if you decided to create a DNS mapping.
# BROKER_PUBLIC_SUBDOMAIN='public'

# [OPTIONAL][DEPENDS $CREATE_DNS_MAPPING] BROKER_PRIVATE_SUBDOMAIN
# This is your private subdomain. It'll be set to access the private load balancer.
# Depends on $CREATE_DNS_MAPPING and $HOSTED_ZONE_NAME. You don't need to set
# this to a full domain, it'll only expect the subdomain part. We'll construct
# the whole domain using the $HOSTED_ZONE_NAME in the application.
#
# e.g. PRIVATE_BROKER_SUBDOMAIN='private' and HOSTED_ZONE_NAME='example.com'
# will end up with `private.example.com` to target the private load balancer.
#
# Please, uncomment the following line if you decided to create a DNS mapping.
# BROKER_PRIVATE_SUBDOMAIN='private'
